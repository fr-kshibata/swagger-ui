#
# https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#pathsObject
#
# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

host: stage-api.fastretailing.com
# schemes: "https"

# This is your document metadata
info:
  version: "0.0.0"
  title: Account PF (Staging)

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /identity/v1/uq/jp/account:
    # This is a HTTP operation

    get:
      summary: アカウント情報取得API
      # Describe this verb here. Note: you can use markdown
      description: |
        アカウント情報取得API
        ※紐付いた他のアカウントの情報は返答しない
        ※このAPIでは、各種処理のロールフォワードを行わない
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
        -
          name: clientid
          in: query
          description: Client ID
          required: true
          type: string
          default: gds-jp
        -
          name: clientsecret
          in: query
          description: Client secret
          required: true
          type: string
          default: gds
          
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: Account
            type: object
            properties:
              channelkey:
                type: string
              memberid:
                type: string
              update_timestamp:
                type: string
          examples:
            application/json:
              name: Puma
              type: Dog
              color: Black
              gender: Female
              breed: Mixed
        401:
          description: Token不正


#          schema:
#            title: Account
#            type: array
#            items:
#              title: Account
#              type: object
#              properties:
#                channelkey:
#                  type: string
#                memberid:
#                  type: string
#                update_timestamp:
#                  type: string



    delete:
      summary: アカウント削除API
      # Describe this verb here. Note: you can use markdown
      description: |
        他のアカウントとのひも付きがあった場合はエラー応答する
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
        -
          name: clientid
          in: query
          description: Client ID
          required: true
          type: string
          default: gds-jp
        -
          name: clientsecret
          in: query
          description: Client secret
          required: true
          type: string
          default: gds

      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: Status
            type: object
            properties:
              status:
                type: string
        401:
          description: Token不正

  # This is a path endpoint. Change it.
  /identity/v1/uq/jp/accesstoken:
    # This is a HTTP operation

    post:
      summary: 新規登録/ログインAPI
      # Describe this verb here. Note: you can use markdown
      description: |
        ログインを試みて、対応するユーザーが居なかった場合は新規追加する。
        AccessTokenのExpireはToken利用タイミングで30分延長される。
      # This is array of GET operation parameters:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        # An example parameter that is in query and is required
        -
          name: clientid
          in: formData
          description: Client ID
          required: true
          type: string
          default: gds-jp
        -
          name: clientsecret
          in: formData
          description: Client secret
          required: true
          type: string
          default: gds
        -
          name: channelkey
          in: formData
          description: Channel key
          required: true
          type: string
          default: gds-jp
        -
          name: channeluid
          in: formData
          description: Channel key
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: AccessTokenResult
            type: object
            properties:
              accesstoken:
                type: object
                properties:
                  token:
                    type: string
                  expire:
                    type: string
              onetimetoken:
                type: object
                properties:
                  token:
                    type: string
                  expire:
                    type: string
        401:
          description: ClientSecret不正

    delete:
      summary: ログアウトAPI
      # Describe this verb here. Note: you can use markdown
      description: |
        AccessTokenを削除すると同時に
        対応するOnetimeTokenも無効化する
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: Status
            type: object
            properties:
              status:
                type: string
        401:
          description: Token不正


  # This is a path endpoint. Change it.
  /identity/v1/uq/jp/linkage:
    # This is a HTTP operation

    get:
      summary: ユーザー連結確認API
      # Describe this verb here. Note: you can use markdown
      description: |
        GET Accountのリンク対応版
        リスト形式で複数の結果を返答する
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: LinkageList
            type: object
            properties:
              data:
                type: array
                items:
                  title: LinkageItem
                  type: object
                  properties:
                    channelkey:
                      type: string
                    memberid:
                      type: string
                    update_timestamp:
                      type: string
          examples:
            application/json:
              data:
                -
                  channelkey: channelkey
                  memberid: memberid
                  update_timestamp: update_timestamp
        401:
          description: Token不正

    post:
      summary: ユーザー連結API
      # Describe this verb here. Note: you can use markdown
      description: |
        連携元のアカウント、連携先のアカウントのどちらも
        OneTimeTokenでアクセスする。
        既にGDSのアカウントがあった場合に、他のGDSアカウントとのひもづけは出来ない
        ※失敗時にはOneTimeTokenは破棄されない。
      # This is array of GET operation parameters:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        # An example parameter that is in query and is required
        -
          name: onetimetoken1
          in: formData
          description: One-time token 1
          required: true
          type: string
        -
          name: onetimetoken2
          in: formData
          description: One-time token 2
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfPersons
            type: array
            items:
              title: Person
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
        401:
          description: Token不正

    delete:
      summary: ユーザー連結解除API
      # Describe this verb here. Note: you can use markdown
      description: |
        MemberIDが指定されていなかった時は、自分のアカウントをグループから外す対象とする
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
        -
          name: memberid
          in: query
          description: Member Id
          required: false
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: Status
            type: object
            properties:
              status:
                type: string
        401:
          description: Token不正



  # This is a path endpoint. Change it.
  /identity/v1/uq/jp/wishlist/{category}:
    # This is a HTTP operation

    get:
      summary: ウィッシュリスト取得API
      # Describe this verb here. Note: you can use markdown
      description: |
        AccountPFは主キーをベースに、既存の該当セグメントのデータおよび上記で指定されたデータのupdate日時を比較してマージする
        その後update日時の降順でソートして999件のサイズに切り詰める
        ※APIではdata部分の検証は行わない。
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: category
          type: string
          description: "styling, mystore or item"
          in: path
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
        -
          name: id
          in: query
          description: ID
          required: true
          type: string
        -
          name: offset
          in: query
          description: Offset
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: WishList
            type: object
            properties:
              data:
                type: array
                items:
                  title: WishItem
                  type: object
                  properties:
                    id:
                      type: string
                    update:
                      type: string
                    data:
                      type: string
              total_count:
                type: string
              last_update_timestamp:
                type: string
        401:
          description: Token不正

    post:
      summary: ウィッシュリスト追加API
      # Describe this verb here. Note: you can use markdown
      description: |
        AccountPFは主キーをベースに、既存の該当セグメントのデータおよび上記で指定されたデータのupdate日時を比較してマージする
        その後update日時の降順でソートして999件のサイズに切り詰める
        ※APIではdata部分の検証は行わない。
      # This is array of GET operation parameters:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        # An example parameter that is in query and is required
        -
          name: category
          description: "styling, mystore or item"
          type: string
          in: path
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: Status
            type: object
            properties:
              status:
                type: string
        401:
          description: Token不正

    delete:
      summary: ウィッシュリスト削除API
      # Describe this verb here. Note: you can use markdown
      description: |
        IDはカンマ区切りで複数指定可能
        ID指定中に*が含まれていた場合、以下の正規表現マッチとして扱ってフィルタリングし、該当行を削除する
        例：ID='ABCD*EF'　→ '^ABCD.*EF$'
        ID=*では前削除になる
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: category
          description: "styling, mystore or item"
          type: string
          in: path
        -
          name: accesstoken
          in: query
          description: Access token
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: Status
            type: object
            properties:
              status:
                type: string
        401:
          description: Token不正


  # This is a path endpoint. Change it.
  /identity/v1/uq/jp/_account/search:
    # This is a HTTP operation

    get:
      summary: アカウント検索API
      # Describe this verb here. Note: you can use markdown
      description: |
        ElasticSearchに対する検索
        管理者用機能
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: clientid
          in: query
          description: Client ID
          required: true
          type: string
          default: fr
        -
          name: clientsecret
          in: query
          description: Client secret
          required: true
          type: string
          default: fr
        -
          name: accountid
          in: query
          description: Account ID
          required: false
          type: string
        -
          name: uid
          in: query
          description: UID
          required: false
          type: string
        -
          name: channelkey
          in: query
          description: Channel key
          required: false
          type: string
        -
          name: channeluid
          in: query
          description: Channel UID
          required: false
          type: string
        -
          name: memberid
          in: query
          description: Member ID
          required: false
          type: string
        -
          name: offset
          in: query
          description: Offset
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit
          required: true
          type: string

      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: array
            items:
              title: AccountSearchItem
              type: object
              properties:
                accountid:
                  type: string
                uid:
                  type: string
                channelkey:
                  type: string
                channeluid:
                  type: string
                memberid:
                  type: string
                update_timestamp:
                  type: string
        401:
          description: ClientSecret不正



  # This is a path endpoint. Change it.
  /identity/v1/uq/jp/_user/search:
    # This is a HTTP operation

    get:
      summary: ユーザー検索API
      # Describe this verb here. Note: you can use markdown
      description: |
        ElasticSearchに対する検索
        管理者用機能
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: uid
          in: query
          description: UID
          required: true
          type: string
        -
          name: offset
          in: query
          description: Offset
          required: true
          type: string
        -
          name: limit
          in: query
          description: Limit
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: UserSearchResult
            type: object
            properties:
              data:
                title: UserSearchData
                type: array
                items:
                  title: UserSearchItem
                  type: object
                  properties:
                    uid:
                      type: string
                    accountid:
                      type: string
                    wishlist:
                      type: string
                    update_timestamp:
                      type: string
        401:
          description: ClientSecret不正
